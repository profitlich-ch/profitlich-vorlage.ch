{"version":3,"sources":["funktionen/_bausteinkasten.scss","_grundlagen.scss","bausteine-ansicht.css","_seite.scss","funktionen/_mediaqueries.scss","_main.scss","bausteine-ansicht.scss"],"names":[],"mappings":"iBA0CA,MACI,MAAA,KCzCJ,KACI,WAAA,WAEJ,EAAA,OAAA,QACC,WAAA,WAGD,KAGI,OAAA,EAAA,KAEA,WAAA,MACA,WAAA,OAGA,6BAAA,IAAA,yBAAA,KAGA,wBAAA,UACA,uBAAA,YAQA,YAAA,kBAAA,CAAA,MALA,eAEI,WAAA,UAAA,aAMJ,WAGI,QAAA,GACA,OAAA,KACA,KAAA,EACA,SAAA,MACA,IAAA,EACA,MAAA,KACA,QAAA,KCLR,GACA,GACA,GACA,GACA,GACA,GDKA,EAOI,OAAA,EAGJ,GACI,OAAA,EACA,QAAA,EAGJ,GACI,gBAAA,KACA,SAAA,SAEA,WACI,QAAA,IACA,KAAA,EACA,SAAA,SAMR,IACI,QAAA,IAAA,IAAA,IAAA,IAMJ,2BACI,QAAA,YAGJ,eACI,QAAA,IAAA,MAKJ,IAEI,MAAA,YACA,QAAA,MACA,YAAA,IACA,YAAA,QEjGJ,OAEI,SAAA,SC0BI,yBDnBJ,OAEI,MAAA,KACA,OAAA,MEZR,MACI,SAAA,SD2BI,yBCnBJ,MLyII,QAAA,KAAA,EAAA,EAAA,GItHA,yBCVJ,MLgII,QAAA,GM9HR,WAII,QAAA,KACA,gBAAA,cACA,MAAA,KACA,WAAA,MAGA,kCACI,KAAA,EAOA,qCAEI,QAAA,EAKJ,kCAEI,SAAA,SAEA,qDACI,QAAA,GAQZ,kBAEI,QAAA,IACA,iBAAA,KAEA,4BNXJ,UAAA,KACA,YAAA,KAGI,YAAA,MMUI,iBAAA,KACA,cAAA,IACA,cAAA,IACA,QAAA,IAAA,IAEA,kCAEI,OAAA,QACA,MAAA,KAMR,4BACI,QAAA,KACA,UAAA,KAEA,wDACI,aAAA,IAWR,wBN5CJ,UAAA,KACA,YAAA,KAGI,YAAA,MM2CI,OAAA,EACA,YAAA,KAEA,sCACI,YAAA,EAKR,8BNxDJ,UAAA,KACA,YAAA,KAGI,YAAA,MMuDI,OAAA,EACA,OAAA,KAAA,EAAA,EAAA,EAEA,4CACI,WAAA,EAKR,yBNpEJ,UAAA,KACA,YAAA,KAGI,YAAA,IMmEI,OAAA,KAAA,EAAA,KAAA,EAIJ,oCAEI,OAAA,EACA,MAAA,EACA,QAAA,EAUR,kBAEI,OAAA,EACA,QAAA,KACA,WAAA,MACA,WAAA,OACA,SAAA,MACA,IAAA,EACA,MAAA,MACA,2BAAA,MAEA,KAAA,EAIJ,kCAGI,SAAA,SACA,WAAA,MACA,YAAA,UAMR,eJ6BA,+BADA,oBIzBI,SAAA,OAGJ,8BACI,QAAA","file":"bausteine-ansicht.css","sourcesContent":["$devBausteinListeBreite: 0;\n@if ($modus == 'dev') {\n    $devBausteinListeBreite: 200px;\n}\n\n\n$breakpoints: (\n    // smartphoneBis:   map-get($layouts, tabletHoch) - 1px,\n    smartphoneBis:   799px,\n    tabletHochAb:    map-get($layouts, tabletHoch),\n    tabletHochBis:   map-get($layouts, tabletQuer) - 1px,\n    tabletQuerAb:    map-get($layouts, tabletQuer),\n    tabletQuerBis:   map-get($layouts, desktop) - 1px,\n    // desktopAb:       map-get($layouts, desktop),\n    desktopAb:       800px,\n    desktopBis:      map-get($layouts, gross) - 1px,\n    gross:           map-get($layouts, gross),\n);\n\n$mediaqueries: (\n\t'smartphone':    (max-width: map-get($breakpoints, smartphoneBis)),\n\t'tablet':        (min-width: map-get($breakpoints, tabletHochAb), max-width: map-get($breakpoints, tabletQuerBis)),\n\t'tabletAb':      (min-width: map-get($breakpoints, tabletHochAb)),\n\t'tabletHochAb':  (max-width: map-get($breakpoints, tabletHochAb)),\n\t'tabletHoch':    (min-width: map-get($breakpoints, tabletHochAb), max-width: map-get($breakpoints, tabletHochBis)),\n\t'tabletHochBis': (max-width: map-get($breakpoints, tabletHochBis)),\n\t'tabletQuerAb':  (max-width: map-get($breakpoints, tabletQuerAb)),\n\t'tabletQuer':    (min-width: map-get($breakpoints, tabletQuerAb), max-width: map-get($breakpoints, tabletQuerBis)),\n\t'tabletQuerBis': (max-width: map-get($breakpoints, tabletQuerBis)),\n\t'desktop':       (min-width: map-get($breakpoints, desktopAb)),\n\t'desktopAb':     (min-width: map-get($breakpoints, desktopAb)),\n);\n\n\n// Versalien\n@mixin versalien {\n\ttext-transform: uppercase;\n\tletter-spacing: 0.04em;\n}\n\n\n// Bilder\n.bild {\n    width: 100%;\n}\n\n\n\n\n// Schriftart\n@mixin schriftart($layout, $schriftgroesse, $zeilenabstand, $fette: false) {\n\n    font-size: groesse($layout, $schriftgroesse);\n    line-height: groesse($layout, $zeilenabstand);\n\n    @if ($fette != 'false') {\n        font-weight: $fette;\n    }\n\n}\n\n\n// Spalten\n// Berechnet die Breite (als Anteil von 100)\n// Standarmässig geht die Funktion davon aus, dass der gegebene Raum keine Spaltenabstände seitlich enthält;\n// mit der Variable $vonZusatzpaltenabstaende können welche angegeben werden.\n@function spalten($layout, $spalten, $vonSpalten, $vonZusatzpaltenabstaende:0, $zusatzspaltenabstaende:0, $invers:1) {\n    $spaltenabstand: groesse($layout, map-get($spaltenabstaende, $layout) );\n\n    // Verfügbarer Raum\n    // minus Spaltenabstände innerhalb des Raumes\n    // gleich Raum für Inhalte\n    // geteilt durch Anzahl Spalten im Raum\n    // gleich Breite jeder Spalte\n    // mal Anzahl gewünschter Spalten\n    // gleich Breite der gewünschten Spalten\n    // plus Spaltenabstände zwischen den gewünschten Spalten\n    // gleich Gesamtbreite\n    // plus Zusatzspaltenabstand\n    @return calc(\n        (\n            (\n                // Raum\n                (100%)\n                // Alle Spaltenabstände des Raumes\n                - $spaltenabstand * ($vonSpalten + $vonZusatzpaltenabstaende - 1)\n            )\n            // Spaltenahl des Raumes\n            / $vonSpalten\n            // gewünschte Spalten\n            * $spalten\n            // Spaltenabstände zwischen den gewünschten Spalten\n            + $spaltenabstand * ($spalten - 1 + $zusatzspaltenabstaende)\n        ) * $invers\n    );\n}\n\n\n\n// Grösse\n// In Pixel oder vw umrechnen\n@function groesse($layout, $zahl) {\n    $zahl: strip-unit($zahl);\n    $breite: false;\n    $korrekturfaktor: 1;\n    $breite: strip-unit( map-get($layouts, $layout) );\n\n    @if $layout == smartphone or $layout == gross {\n        @return $zahl * 1px;\n    } @else {\n        $vw: decimal-round( calc($zahl / strip-unit($breite)) * 100, 2) * 1vw;\n        @return $vw;\n    }\n\n}\n\n\n// Abstand\n@mixin abstand($layout, $abstand, $position, $top: 0, $right: 0, $bottom: 0, $left: 0) {\n\n    // @include abstand($layout, padding/margin, alle/top/right/bottom/left, 0, 0, 0, 0) \n\n    $einheit: false;\n\n    @if $layout == smartphone or $layout == gross {\n        $top: $top + px;\n        $right: $right + px;\n        $bottom: $bottom + px;\n        $left: $left + px;\n    } @else {\n\n        @if type-of($top) == 'number'{\n            $top: groesse($layout, $top);\n        } \n        @if type-of($right) == 'number'{\n            $right: groesse($layout, $right);\n        } \n        @if type-of($bottom) == 'number'{\n            $bottom: groesse($layout, $bottom);\n        } \n        @if type-of($left) == 'number'{\n            $left: groesse($layout, $left);\n        } \n    }\n    \n    @if $position == alle {\n        #{$abstand}: $top $right $bottom $left;\n    }\n    @if $position == top {\n        #{$abstand}-top: $top;\n    }\n    @if $position == right {\n        #{$abstand}-right: $top;\n    }\n    @if $position == bottom {\n        #{$abstand}-bottom: $top;\n    }\n    @if $position == left {\n        #{$abstand}-left: $top;\n    }\n}\n\n\n// Seitenbreite\n@mixin seitenbreite {\n    max-width: $maximalbreite;\n    margin: 0 auto;\n}","// Stellt das Box-Sizing von content-box auf border-box\n// padding und border sind dadurch Teil jeder Grössenangabe\nhtml {\n    box-sizing: border-box;\n}\n*, *:after, *:before { \n\tbox-sizing: border-box;\n}\n\nbody {\n\n    background-color: map-get($farben, hintergrund);\n    margin: 0 auto;\n\n    min-height: 100vh;\n    overflow-x: hidden;\n\n    // Alle Unterstreichungen bei Unterlängen unterbrechen\n    text-decoration-skip-ink: auto;\n\n    // Font Smoothing\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased; \n\n    // Transition erst nach dem Laden der Seite anwenden\n    &.preload * {\n        // animation-duration: 0s !important;\n        transition: transform 0s !important;\n    }\n\n    font-family: 'Source Serif Pro', serif;\n\n    // body Hintergrundfarbe als Pseudoelement, damit mix-blend-mode mit der Hintergrundfarbe funktioniert\n    &:after {\n    \n        background-color: map-get($farben, hintergrund);\n        content: \"\";\n        height: 100%;\n        left: 0;\n        position: fixed;\n        top: 0;\n        width: 100%;\n        z-index: -100;\n        \n    }\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    margin: 0;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style-type: none;\n    position: relative;\n    \n    &::before { \n        content: \"–\";\n        left: 0;\n        position: absolute;      \n    }\n}\n\n\n// Damit keine SVG's im Smartphone abgeschnitten werden. \nsvg {\n    padding: 1px 1px 1px 1px;\n}\n\n// Fokus Outline entfernen, wenn nicht per Keyboard gesetzt\n// https://css-tricks.com/keyboard-only-focus-styles/\n// Fokussiert, aber nicht mit der Tastatur\n*:focus:not(:focus-visible) {\n    outline: none !important;\n}\n// Mit der Tastatur fokussiert\n*:focus-visible { \n    outline: 2px solid map-get($farben, braun-1);\n }\n\n// Alt Text unsichtbar machen, aber für Screenreader lesbar halten\n// Bilder als Block statt als Inline anzeigen. Das löst das Problem von unerwünschten Pixeln unterhalb des Bildes.\nimg {\n\n    color: transparent;\n    display: block;\n    line-height: 1em;\n    text-indent: -9999px;\n}","@charset \"UTF-8\";\n.bild {\n  width: 100%;\n}\n\nhtml {\n  box-sizing: border-box;\n}\n\n*, *:after, *:before {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0 auto;\n  min-height: 100vh;\n  overflow-x: hidden;\n  text-decoration-skip-ink: auto;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: \"Source Serif Pro\", serif;\n}\nbody.preload * {\n  transition: transform 0s !important;\n}\nbody:after {\n  content: \"\";\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: -100;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  list-style-type: none;\n  position: relative;\n}\nli::before {\n  content: \"–\";\n  left: 0;\n  position: absolute;\n}\n\nsvg {\n  padding: 1px 1px 1px 1px;\n}\n\n*:focus:not(:focus-visible) {\n  outline: none !important;\n}\n\n*:focus-visible {\n  outline: 2px solid;\n}\n\nimg {\n  color: transparent;\n  display: block;\n  line-height: 1em;\n  text-indent: -9999px;\n}\n\n.seite {\n  position: relative;\n}\n\n@media (max-width: 799px) {\n  .seite {\n    width: 100%;\n    height: 100%;\n  }\n}\n.main {\n  position: relative;\n}\n\n@media (max-width: 799px) {\n  .main {\n    padding: 90px 0px 0px 0px;\n  }\n}\n@media (min-width: 800px) {\n  .main {\n    padding: 0vw 0vw 0vw 0vw;\n  }\n}\n.bausteine {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 100vh;\n}\n.bausteine__darstellung-container {\n  flex: 1;\n}\n.bausteine__darstellung.ohne-padding {\n  padding: 0;\n}\n.bausteine__darstellung__baustein {\n  position: relative;\n}\n.bausteine__darstellung__baustein:first-child:before {\n  content: \"\";\n}\n.bausteine__liste {\n  padding: 5px;\n  background-color: white;\n}\n.bausteine__liste__baustein {\n  font-size: 16px;\n  line-height: 18px;\n  font-weight: false;\n  background-color: white;\n  border-radius: 4px;\n  margin-bottom: 2px;\n  padding: 6px 5px;\n}\n.bausteine__liste__baustein:hover {\n  cursor: pointer;\n  color: white;\n}\n.bausteine__liste__schalter {\n  display: flex;\n  flex-wrap: wrap;\n}\n.bausteine__liste__schalter .bausteine__liste__baustein {\n  margin-right: 2px;\n}\n.bausteine__liste__text {\n  font-size: 16px;\n  line-height: 18px;\n  font-weight: false;\n  margin: 0;\n  padding-top: 16px;\n}\n.bausteine__liste__text:first-of-type {\n  padding-top: 0;\n}\n.bausteine__liste__untertitel {\n  font-size: 16px;\n  line-height: 18px;\n  font-weight: false;\n  margin: 0;\n  margin: 10px 0 0 0;\n}\n.bausteine__liste__untertitel:first-of-type {\n  margin-top: 0;\n}\n.bausteine__liste__titel {\n  font-size: 22px;\n  line-height: 24px;\n  font-weight: 600;\n  margin: 20px 0 10px 0;\n}\n.bausteine__liste__zwischenspeicher {\n  height: 0;\n  width: 0;\n  opacity: 0;\n}\n.bausteine__liste {\n  bottom: 0;\n  display: none;\n  min-height: 100vh;\n  overflow-y: scroll;\n  position: fixed;\n  top: 0;\n  width: 300px;\n  -webkit-overflow-scrolling: touch;\n  left: 0;\n}\n.bausteine__darstellung-container {\n  position: relative;\n  min-height: 100vh;\n  will-change: transform;\n}\n\n.slideout-open,\n.slideout-open body,\n.slideout-open .slideout-panel {\n  overflow: hidden;\n}\n\n.slideout-open .slideout-menu {\n  display: block;\n}",".seite {\n    \n    position: relative;\n    \n}\n\n@include mediaquery(smartphone) {\n    $layout: smartphone;\n\n    .seite {\n\n        width: 100%;\n        height: 100%;\n\n    }\n\n}\n\n\n@include mediaquery(tabletAb) {\n    $layout: tablet;\n\n\n}\n\n\n@include mediaquery(tablet) {\n    $layout: tablet;\n\n\n}\n\n\n@include mediaquery(desktopAb) {\n    $layout: desktop;\n\n    .seite {\n\n        \n\n    }\n\n}","// Zusammenlegen aller Meda Queries in eine\n// https://www.sitepoint.com/sass-mixin-media-merging\n\n@mixin mediaquery($mediaquery) {\n    // Hole die map $mediaquery aus der map $mediaqueries\n    $queries: map-get($mediaqueries, $mediaquery);\n\n    // Wenn es keine $mediaquery in der map gibt, gebe einen Fehler aus\n    @if not $queries {\n        @error \"No value could be retrieved from `#{$mediaquery}`. \"\n        + \"Please make sure it is defined in `$breakpoints` map.\";\n    }\n\n    // Include the media mixin with $queries\n    @include media($queries) {\n        @content;\n    }\n}\n\n@mixin media($queries) {\n    // Erst wenn alle mediaqueries geschachtelt geschrieben sind,\n    // wird der @content ausgegeben\n    @if length($queries) == 0 {\n        @content;\n    } @else {\n        $first-key: nth(map-keys($queries), 1);\n\n        // Schreibt nur die mediaquery, nicht den Inhalt\n        @media ($first-key: map-get($queries, $first-key)) {\n            $queries: map-remove($queries, $first-key);\n\n            @include media($queries) {\n                @content;\n            }\n        }\n    }\n}",".main {\n    position: relative;\n}\n\n\n@include mediaquery(smartphone) {\n\n    $layout: smartphone;\n\n    .main {\n        @include abstand($layout, padding, alle, 90, 0, 0, 0);\n    }\n}\n\n@include mediaquery(desktop) {\n    \n    $layout: desktop;\n\n    .main {\n        @include abstand($layout, padding, alle, 0, 0, 0, 0);\n    }\n}","// Einstellungen\n@import \"einstellungen\";\n\n// Funktionen\n@import \"funktionen/funktionen\";\n\n// Breakpoints, Variablen, Mixins\n@import \"grundlagen\";\n\n// Schriften\n@import \"fonts\";\n\n// Bausteine\n@import \"/Users/mprofitl/Profitlich/F Lokal/dev.profitlich.ch/src/bausteine/_VORLAGE/_VORLAGE.scss\";\n\n// Sonstiges\n@import \"seite\";\n@import \"main\";\n\n\n.bausteine {\n\n    $layout: smartphone;\n\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    min-height: 100vh;\n    \n\n    &__darstellung-container {\n        flex: 1;        \n    }\n    \n    &__darstellung {\n\n        // overflow: hidden;\n\n        &.ohne-padding {\n\n            padding: 0;\n\n        }\n\n\n        &__baustein {\n                \n            position: relative;\n    \n            &:first-child:before {\n                content: \"\";\n            }\n            \n        }\n\n    }\n\n    \n    &__liste {\n        \n        padding: 5px;\n        background-color: white;\n        \n        &__baustein {\n            \n            @include schriftart($layout, 16, 18);\n            background-color: white;\n            border-radius: 4px;\n            margin-bottom: 2px;\n            padding: 6px 5px;\n\n            &:hover {\n                background-color: map-get($farben, braun-1);\n                cursor: pointer;\n                color: white;\n            }\n\n            \n        }\n\n        &__schalter {\n            display: flex;\n            flex-wrap: wrap;\n\n            .bausteine__liste__baustein {\n                margin-right: 2px\n            }\n\n        }\n\n        &__dokumentation {\n\n            \n             \n        }\n        \n        &__text {\n            \n            @include schriftart($layout, 16, 18);\n            margin: 0;\n            padding-top: 16px;\n            \n            &:first-of-type {\n                padding-top: 0;\n            }\n\n        }\n        \n        &__untertitel {\n            \n            @include schriftart($layout, 16, 18);\n            margin: 0;\n            margin: 10px 0 0 0;\n            \n            &:first-of-type {\n                margin-top: 0;\n            }\n\n        }\n        \n        &__titel {\n    \n            @include schriftart($layout, 22, 24, 600);\n            margin: 20px 0 10px 0;\n    \n        }\n\n        &__zwischenspeicher {\n\n            height: 0;\n            width: 0;\n            opacity: 0;\n\n        }\n\n    }\n\n\n\n    // Slideout\n    // https://slideout.js.org/\n    &__liste {\n\n        bottom: 0;\n        display: none;\n        min-height: 100vh;\n        overflow-y: scroll;\n        position: fixed;\n        top: 0;\n        width: 300px;\n        -webkit-overflow-scrolling: touch;\n\n        left: 0;\n\n    }\n\n    &__darstellung-container {\n        \n        background-color: map-get($farben, hintergrund);\n        position: relative;\n        min-height: 100vh;\n        will-change: transform;\n\n    }\n\n}\n\n.slideout-open,\n.slideout-open body,\n.slideout-open .slideout-panel {\n    overflow: hidden;\n}\n\n.slideout-open .slideout-menu {\n    display: block;\n}"]}